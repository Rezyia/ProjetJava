
package Views;

import java.awt.*;
import java.awt.event.*;

import javax.swing.*;
import javax.swing.event.*;

import com.sun.source.tree.Scope;

import Controlers.ControlerMain;
import Models.Employee;


public class WPointings extends javax.swing.JPanel {

	private static final long serialVersionUID = -5326257363166640986L;
	
	private static ControlerMain controler;
	

	public WPointings() {
        initComponents();
    }
    
	
    public WPointings(ControlerMain c) {
    	controler = c;
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        main = new javax.swing.JPanel();
        scrollList = new javax.swing.JScrollPane();
        list = new javax.swing.JList<String>();
        checkBox = new javax.swing.JCheckBox();
        
        header = new javax.swing.JPanel();
        lHeader = new javax.swing.JLabel(); // "Pointing " + <ID Pointing> + " - Employee " + <ID Employee> + " - Date : " + "<Date>"
        
        info = new javax.swing.JPanel();
        lInOut = new javax.swing.JLabel();
        lPointedTime = new javax.swing.JLabel();
        lPlannedTime = new javax.swing.JLabel();
        
        setLayout(new java.awt.GridLayout());

        main.setLayout(new java.awt.BorderLayout());

        scrollList.setViewportView(list);
        main.add(scrollList, java.awt.BorderLayout.CENTER);

        updatePointings(controler.getPointingsOfTheDay());
        
        checkBox.setText("Show all pointings");
        checkBox.addItemListener(new ItemListener() {
			@Override
			public void itemStateChanged(ItemEvent e) {
                checkboxActionPerformed(e);
				
			}
        });
        main.add(checkBox, java.awt.BorderLayout.PAGE_END);

        add(main);

        header.setLayout(new java.awt.BorderLayout());

        lHeader.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lHeader.setText("Pointing <IDEmp> - <Date>");
        lHeader.setPreferredSize(new java.awt.Dimension(34, 40));
        header.add(lHeader, java.awt.BorderLayout.NORTH);

        info.setLayout(new javax.swing.BoxLayout(info, javax.swing.BoxLayout.Y_AXIS));

        lInOut.setText(" In/Out : ");
        info.add(lInOut);

        lPointedTime.setText(" Hour pointed :");
        info.add(lPointedTime);

        lPlannedTime.setText(" Hour planned : ");
        info.add(lPlannedTime);

        header.add(info, java.awt.BorderLayout.CENTER);

        add(header);
    }// </editor-fold>                        

    
    private void checkboxActionPerformed(ItemEvent evt) {                                           
    	if (evt.getStateChange() == ItemEvent.SELECTED) updatePointings(controler.getPointings());
    	else updatePointings(controler.getPointingsOfTheDay());
    }                                          

    
    private void loadPointingData(int index) {
    	
    }
    
    
    public void updateList() {
    	if (checkBox.isEnabled()) updatePointings(controler.getPointings());
    	else updatePointings(controler.getPointingsOfTheDay());
    }
    
    
    public void updatePointings(String[] items) {
    	list = new JList<String>();
        list.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() { return items.length; }
            public String getElementAt(int i) { return items[i]; }
        });
        list.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        list.clearSelection();
        
        ListSelectionModel selectionModel = list.getSelectionModel();
        selectionModel.addListSelectionListener(new ListSelectionListener() {
			public void valueChanged(ListSelectionEvent e) {
				ListSelectionModel lsm = (ListSelectionModel)e.getSource();
			    if (!lsm.isSelectionEmpty()) {
			    	int index = lsm.getMinSelectionIndex();
			    	
			    	loadPointingData(index);
			        
			        lHeader.setText("Pointing " + list.getSelectedValue());
			    }
			}
		});
        
        scrollList.setViewportView(list);
        SwingUtilities.updateComponentTreeUI(scrollList);
    }
    

    // Variables declaration - do not modify                     
    private javax.swing.JCheckBox checkBox;
    private javax.swing.JLabel lInOut;
    private javax.swing.JLabel lPointedTime;
    private javax.swing.JLabel lPlannedTime;
    private javax.swing.JLabel lHeader;
    private javax.swing.JList<String> list;
    private javax.swing.JPanel main;
    private javax.swing.JPanel header;
    private javax.swing.JPanel info;
    private javax.swing.JScrollPane scrollList;
    // End of variables declaration                   
}
